
importing the function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

matrix declaration
>>> mat = [[10, 20], [12, 24]]

Normal divisiom
>>> matrix_divided(mat, 2)
[[5.0, 10.0], [6.0, 12.0]]

Division by string
>>> matrix_divided(mat, 'pip')
Traceback (most recent call last):
	...
TypeError: div must be a number

Division by a 0
>>> matrix_divided(mat, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

Division by matrix of differrent size
>>> matrix_divided([[1,2],[1,2,3]], 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

Division by element not a float or int
>>> matrix_divided([[1,2],['a',2]], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

dividing by infinity
>>> matrix_divided([[float('inf')]], 2)
[[inf]]


>>> matrix_divided([[float('inf'),4]], 2)
[[inf, 2.0]]

Dividing with one argument
>>> matrix_divided([[float('inf'),4]])
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Dividing with no argumets
>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
